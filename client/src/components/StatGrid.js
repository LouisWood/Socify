import { StyledGrid } from "../styles";
import Tooltip from "@mui/material/Tooltip"; 
import Fade from '@mui/material/Fade';

const desc = new Map([
    ["Acoustique", "DÃ©crit Ã  quel point une piste est accoustique"],
    ["DansabilitÃ©", "DÃ©crit Ã  quel point une piste est adaptÃ©e Ã  la danse en fonction d'une combinaison d'Ã©lÃ©ments musicaux, notamment le tempo, la stabilitÃ© du rythme, la force des battements et la rÃ©gularitÃ© gÃ©nÃ©rale."],
    ["Ã‰nergie", "DÃ©crit le taux d'Ã©nergie d'une piste. En rÃ¨gle gÃ©nÃ©rale, les morceaux Ã©nergiques sont rapides, forts et bruyants. Par exemple, le death metal a une Ã©nergie Ã©levÃ©e, tandis qu'un prÃ©lude de Bach est bas sur l'Ã©chelle."],
    ["InstrumentalitÃ©", "DÃ©crit si une piste ne contient pas de voix. Les sons \"Ooh\" et \"aah\" sont traitÃ©s comme instrumentaux dans ce contexte. Les morceaux de rap ou de crÃ©ations orales sont clairement \"vocaux\"."],
    ["Valence", "DÃ©crit la positivitÃ© musicale vÃ©hiculÃ©e par un morceau"]
])

const StatGrid = ({stats}) => (
    <>
        {stats ? (
            <StyledGrid>
                {Array.from(stats).map(([key, value]) => (
                    <Tooltip title={desc.get(key)} TransitionComponent={Fade} followCursor key={key}>
                        <li className="grid_item" key={key}>
                            <div className="grid_item_inner">
                                    <p className="grid_item_stat_value">{value}</p>
                                    <h3 className='grid_item_stat_name'>{key}</h3>
                            </div>
                        </li>
                    </Tooltip>
                ))}
            </StyledGrid>
        ): (
        <p className='empty-notice'>Pas de stats Ã  afficher ðŸ˜”</p>
        )}
    </>
)

export default StatGrid;